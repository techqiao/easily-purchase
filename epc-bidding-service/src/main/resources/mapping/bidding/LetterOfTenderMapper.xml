<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.epc.bidding.mapper.LetterOfTenderMapper" >
  <resultMap id="BaseResultMap" type="com.epc.bidding.domain.LetterOfTender" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="procurement_project_id" property="procurementProjectId" jdbcType="BIGINT" />
    <result column="supplier_id" property="supplierId" jdbcType="BIGINT" />
    <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
    <result column="bids_id" property="bidsId" jdbcType="BIGINT" />
    <result column="bids_name" property="bidsName" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="VARCHAR" />
    <result column="quality_target" property="qualityTarget" jdbcType="VARCHAR" />
    <result column="duration" property="duration" jdbcType="INTEGER" />
    <result column="validity" property="validity" jdbcType="INTEGER" />
    <result column="manager_name" property="managerName" jdbcType="VARCHAR" />
    <result column="certificate_number" property="certificateNumber" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.epc.bidding.domain.LetterOfTender" extends="BaseResultMap" >
    <result column="memo" property="memo" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, procurement_project_id, supplier_id, supplier_name, bids_id, bids_name, money, 
    quality_target, duration, validity, manager_name, certificate_number, create_at, 
    update_at, is_deleted
  </sql>
  <sql id="Blob_Column_List" >
    memo
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.epc.bidding.domain.LetterOfTenderCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from letter_of_tender
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.epc.bidding.domain.LetterOfTenderCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from letter_of_tender
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from letter_of_tender
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from letter_of_tender
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.epc.bidding.domain.LetterOfTenderCriteria" >
    delete from letter_of_tender
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epc.bidding.domain.LetterOfTender" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into letter_of_tender (procurement_project_id, supplier_id, supplier_name, 
      bids_id, bids_name, money, 
      quality_target, duration, validity, 
      manager_name, certificate_number, create_at, 
      update_at, is_deleted, memo
      )
    values (#{procurementProjectId,jdbcType=BIGINT}, #{supplierId,jdbcType=BIGINT}, #{supplierName,jdbcType=VARCHAR}, 
      #{bidsId,jdbcType=BIGINT}, #{bidsName,jdbcType=VARCHAR}, #{money,jdbcType=VARCHAR}, 
      #{qualityTarget,jdbcType=VARCHAR}, #{duration,jdbcType=INTEGER}, #{validity,jdbcType=INTEGER}, 
      #{managerName,jdbcType=VARCHAR}, #{certificateNumber,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateAt,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=INTEGER}, #{memo,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.epc.bidding.domain.LetterOfTender" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into letter_of_tender
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="procurementProjectId != null" >
        procurement_project_id,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="supplierName != null" >
        supplier_name,
      </if>
      <if test="bidsId != null" >
        bids_id,
      </if>
      <if test="bidsName != null" >
        bids_name,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="qualityTarget != null" >
        quality_target,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="validity != null" >
        validity,
      </if>
      <if test="managerName != null" >
        manager_name,
      </if>
      <if test="certificateNumber != null" >
        certificate_number,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="memo != null" >
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="procurementProjectId != null" >
        #{procurementProjectId,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="supplierName != null" >
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="bidsId != null" >
        #{bidsId,jdbcType=BIGINT},
      </if>
      <if test="bidsName != null" >
        #{bidsName,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=VARCHAR},
      </if>
      <if test="qualityTarget != null" >
        #{qualityTarget,jdbcType=VARCHAR},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="validity != null" >
        #{validity,jdbcType=INTEGER},
      </if>
      <if test="managerName != null" >
        #{managerName,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null" >
        #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epc.bidding.domain.LetterOfTenderCriteria" resultType="java.lang.Integer" >
    select count(*) from letter_of_tender
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update letter_of_tender
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.procurementProjectId != null" >
        procurement_project_id = #{record.procurementProjectId,jdbcType=BIGINT},
      </if>
      <if test="record.supplierId != null" >
        supplier_id = #{record.supplierId,jdbcType=BIGINT},
      </if>
      <if test="record.supplierName != null" >
        supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      </if>
      <if test="record.bidsId != null" >
        bids_id = #{record.bidsId,jdbcType=BIGINT},
      </if>
      <if test="record.bidsName != null" >
        bids_name = #{record.bidsName,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=VARCHAR},
      </if>
      <if test="record.qualityTarget != null" >
        quality_target = #{record.qualityTarget,jdbcType=VARCHAR},
      </if>
      <if test="record.duration != null" >
        duration = #{record.duration,jdbcType=INTEGER},
      </if>
      <if test="record.validity != null" >
        validity = #{record.validity,jdbcType=INTEGER},
      </if>
      <if test="record.managerName != null" >
        manager_name = #{record.managerName,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateNumber != null" >
        certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null" >
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAt != null" >
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update letter_of_tender
    set id = #{record.id,jdbcType=BIGINT},
      procurement_project_id = #{record.procurementProjectId,jdbcType=BIGINT},
      supplier_id = #{record.supplierId,jdbcType=BIGINT},
      supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      bids_id = #{record.bidsId,jdbcType=BIGINT},
      bids_name = #{record.bidsName,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=VARCHAR},
      quality_target = #{record.qualityTarget,jdbcType=VARCHAR},
      duration = #{record.duration,jdbcType=INTEGER},
      validity = #{record.validity,jdbcType=INTEGER},
      manager_name = #{record.managerName,jdbcType=VARCHAR},
      certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      memo = #{record.memo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update letter_of_tender
    set id = #{record.id,jdbcType=BIGINT},
      procurement_project_id = #{record.procurementProjectId,jdbcType=BIGINT},
      supplier_id = #{record.supplierId,jdbcType=BIGINT},
      supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      bids_id = #{record.bidsId,jdbcType=BIGINT},
      bids_name = #{record.bidsName,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=VARCHAR},
      quality_target = #{record.qualityTarget,jdbcType=VARCHAR},
      duration = #{record.duration,jdbcType=INTEGER},
      validity = #{record.validity,jdbcType=INTEGER},
      manager_name = #{record.managerName,jdbcType=VARCHAR},
      certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epc.bidding.domain.LetterOfTender" >
    update letter_of_tender
    <set >
      <if test="procurementProjectId != null" >
        procurement_project_id = #{procurementProjectId,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="supplierName != null" >
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="bidsId != null" >
        bids_id = #{bidsId,jdbcType=BIGINT},
      </if>
      <if test="bidsName != null" >
        bids_name = #{bidsName,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=VARCHAR},
      </if>
      <if test="qualityTarget != null" >
        quality_target = #{qualityTarget,jdbcType=VARCHAR},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="validity != null" >
        validity = #{validity,jdbcType=INTEGER},
      </if>
      <if test="managerName != null" >
        manager_name = #{managerName,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null" >
        certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.epc.bidding.domain.LetterOfTender" >
    update letter_of_tender
    set procurement_project_id = #{procurementProjectId,jdbcType=BIGINT},
      supplier_id = #{supplierId,jdbcType=BIGINT},
      supplier_name = #{supplierName,jdbcType=VARCHAR},
      bids_id = #{bidsId,jdbcType=BIGINT},
      bids_name = #{bidsName,jdbcType=VARCHAR},
      money = #{money,jdbcType=VARCHAR},
      quality_target = #{qualityTarget,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=INTEGER},
      validity = #{validity,jdbcType=INTEGER},
      manager_name = #{managerName,jdbcType=VARCHAR},
      certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      memo = #{memo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epc.bidding.domain.LetterOfTender" >
    update letter_of_tender
    set procurement_project_id = #{procurementProjectId,jdbcType=BIGINT},
      supplier_id = #{supplierId,jdbcType=BIGINT},
      supplier_name = #{supplierName,jdbcType=VARCHAR},
      bids_id = #{bidsId,jdbcType=BIGINT},
      bids_name = #{bidsName,jdbcType=VARCHAR},
      money = #{money,jdbcType=VARCHAR},
      quality_target = #{qualityTarget,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=INTEGER},
      validity = #{validity,jdbcType=INTEGER},
      manager_name = #{managerName,jdbcType=VARCHAR},
      certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select resultMap="ResultMapWithBLOBs" parameterType="com.epc.bidding.domain.LetterOfTenderCriteria" id="selectByExampleWithBLOBsWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from letter_of_tender
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select resultMap="BaseResultMap" parameterType="com.epc.bidding.domain.LetterOfTenderCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from letter_of_tender
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>