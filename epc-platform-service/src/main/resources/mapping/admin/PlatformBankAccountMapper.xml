<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.epc.platform.service.mapper.admin.PlatformBankAccountMapper" >
  <resultMap id="BaseResultMap" type="com.epc.platform.service.domain.admin.PlatformBankAccount" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="proceeds_ unit" property="proceedsUnit" jdbcType="VARCHAR" />
    <result column="bank_of_deposit" property="bankOfDeposit" jdbcType="VARCHAR" />
    <result column="shroff_account_number" property="shroffAccountNumber" jdbcType="VARCHAR" />
    <result column="wholesale_line_number" property="wholesaleLineNumber" jdbcType="VARCHAR" />
    <result column="location_line_number" property="locationLineNumber" jdbcType="VARCHAR" />
    <result column="Payment type" property="paymentType" jdbcType="INTEGER" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, "proceeds_ unit", bank_of_deposit, shroff_account_number, wholesale_line_number, 
    location_line_number, "Payment type", create_at, update_at, is_deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.epc.platform.service.domain.admin.PlatformBankAccountCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from platform_bank_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from platform_bank_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from platform_bank_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.epc.platform.service.domain.admin.PlatformBankAccountCriteria" >
    delete from platform_bank_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epc.platform.service.domain.admin.PlatformBankAccount" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into platform_bank_account ("proceeds_ unit", bank_of_deposit, shroff_account_number, 
      wholesale_line_number, location_line_number, 
      "Payment type", create_at, update_at, 
      is_deleted)
    values (#{proceedsUnit,jdbcType=VARCHAR}, #{bankOfDeposit,jdbcType=VARCHAR}, #{shroffAccountNumber,jdbcType=VARCHAR}, 
      #{wholesaleLineNumber,jdbcType=VARCHAR}, #{locationLineNumber,jdbcType=VARCHAR}, 
      #{paymentType,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epc.platform.service.domain.admin.PlatformBankAccount" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into platform_bank_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="proceedsUnit != null" >
        "proceeds_ unit",
      </if>
      <if test="bankOfDeposit != null" >
        bank_of_deposit,
      </if>
      <if test="shroffAccountNumber != null" >
        shroff_account_number,
      </if>
      <if test="wholesaleLineNumber != null" >
        wholesale_line_number,
      </if>
      <if test="locationLineNumber != null" >
        location_line_number,
      </if>
      <if test="paymentType != null" >
        "Payment type",
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="proceedsUnit != null" >
        #{proceedsUnit,jdbcType=VARCHAR},
      </if>
      <if test="bankOfDeposit != null" >
        #{bankOfDeposit,jdbcType=VARCHAR},
      </if>
      <if test="shroffAccountNumber != null" >
        #{shroffAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="wholesaleLineNumber != null" >
        #{wholesaleLineNumber,jdbcType=VARCHAR},
      </if>
      <if test="locationLineNumber != null" >
        #{locationLineNumber,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epc.platform.service.domain.admin.PlatformBankAccountCriteria" resultType="java.lang.Integer" >
    select count(*) from platform_bank_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update platform_bank_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.proceedsUnit != null" >
        "proceeds_ unit" = #{record.proceedsUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.bankOfDeposit != null" >
        bank_of_deposit = #{record.bankOfDeposit,jdbcType=VARCHAR},
      </if>
      <if test="record.shroffAccountNumber != null" >
        shroff_account_number = #{record.shroffAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.wholesaleLineNumber != null" >
        wholesale_line_number = #{record.wholesaleLineNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.locationLineNumber != null" >
        location_line_number = #{record.locationLineNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentType != null" >
        "Payment type" = #{record.paymentType,jdbcType=INTEGER},
      </if>
      <if test="record.createAt != null" >
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAt != null" >
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update platform_bank_account
    set id = #{record.id,jdbcType=BIGINT},
      "proceeds_ unit" = #{record.proceedsUnit,jdbcType=VARCHAR},
      bank_of_deposit = #{record.bankOfDeposit,jdbcType=VARCHAR},
      shroff_account_number = #{record.shroffAccountNumber,jdbcType=VARCHAR},
      wholesale_line_number = #{record.wholesaleLineNumber,jdbcType=VARCHAR},
      location_line_number = #{record.locationLineNumber,jdbcType=VARCHAR},
      "Payment type" = #{record.paymentType,jdbcType=INTEGER},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epc.platform.service.domain.admin.PlatformBankAccount" >
    update platform_bank_account
    <set >
      <if test="proceedsUnit != null" >
        "proceeds_ unit" = #{proceedsUnit,jdbcType=VARCHAR},
      </if>
      <if test="bankOfDeposit != null" >
        bank_of_deposit = #{bankOfDeposit,jdbcType=VARCHAR},
      </if>
      <if test="shroffAccountNumber != null" >
        shroff_account_number = #{shroffAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="wholesaleLineNumber != null" >
        wholesale_line_number = #{wholesaleLineNumber,jdbcType=VARCHAR},
      </if>
      <if test="locationLineNumber != null" >
        location_line_number = #{locationLineNumber,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null" >
        "Payment type" = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epc.platform.service.domain.admin.PlatformBankAccount" >
    update platform_bank_account
    set "proceeds_ unit" = #{proceedsUnit,jdbcType=VARCHAR},
      bank_of_deposit = #{bankOfDeposit,jdbcType=VARCHAR},
      shroff_account_number = #{shroffAccountNumber,jdbcType=VARCHAR},
      wholesale_line_number = #{wholesaleLineNumber,jdbcType=VARCHAR},
      location_line_number = #{locationLineNumber,jdbcType=VARCHAR},
      "Payment type" = #{paymentType,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.epc.platform.service.domain.admin.PlatformBankAccountCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from platform_bank_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>