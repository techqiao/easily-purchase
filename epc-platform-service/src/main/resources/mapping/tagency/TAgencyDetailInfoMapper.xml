<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.epc.platform.service.mapper.tagency.TAgencyDetailInfoMapper" >
  <resultMap id="BaseResultMap" type="com.epc.platform.service.domain.tagency.TAgencyDetailInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="agency_id" property="agencyId" jdbcType="BIGINT" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="uniform_credit_code" property="uniformCreditCode" jdbcType="VARCHAR" />
    <result column="public_bank_name" property="publicBankName" jdbcType="VARCHAR" />
    <result column="public_ban_account_number" property="publicBanAccountNumber" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="company_address" property="companyAddress" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="selectMap" type="com.epc.administration.facade.biddingagency.vo.BiddingAgencyVO">
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="uniform_credit_code" property="uniformCreditCode" jdbcType="VARCHAR" />
    <result column="public_bank_name" property="publicBankName" jdbcType="VARCHAR" />
    <result column="public_ban_account_number" property="publicBanAccountNumber" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER"/>
    <result column="name" property="name" jdbcType="VARCHAR"/>
    <result column="cellphone" property="cellphone" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, agency_id, company_name, uniform_credit_code, public_bank_name, public_ban_account_number, 
    create_at, update_at, is_deleted, company_address
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.epc.platform.service.domain.tagency.TAgencyDetailInfoCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_agency_detail_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_agency_detail_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_agency_detail_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.epc.platform.service.domain.tagency.TAgencyDetailInfoCriteria" >
    delete from t_agency_detail_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epc.platform.service.domain.tagency.TAgencyDetailInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_agency_detail_info (agency_id, company_name, uniform_credit_code, 
      public_bank_name, public_ban_account_number, 
      create_at, update_at, is_deleted, 
      company_address)
    values (#{agencyId,jdbcType=BIGINT}, #{companyName,jdbcType=VARCHAR}, #{uniformCreditCode,jdbcType=VARCHAR}, 
      #{publicBankName,jdbcType=VARCHAR}, #{publicBanAccountNumber,jdbcType=VARCHAR}, 
      #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=INTEGER}, 
      #{companyAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.epc.platform.service.domain.tagency.TAgencyDetailInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_agency_detail_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="agencyId != null" >
        agency_id,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="uniformCreditCode != null" >
        uniform_credit_code,
      </if>
      <if test="publicBankName != null" >
        public_bank_name,
      </if>
      <if test="publicBanAccountNumber != null" >
        public_ban_account_number,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="companyAddress != null" >
        company_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="agencyId != null" >
        #{agencyId,jdbcType=BIGINT},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="uniformCreditCode != null" >
        #{uniformCreditCode,jdbcType=VARCHAR},
      </if>
      <if test="publicBankName != null" >
        #{publicBankName,jdbcType=VARCHAR},
      </if>
      <if test="publicBanAccountNumber != null" >
        #{publicBanAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="companyAddress != null" >
        #{companyAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epc.platform.service.domain.tagency.TAgencyDetailInfoCriteria" resultType="java.lang.Integer" >
    select count(*) from t_agency_detail_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_agency_detail_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.agencyId != null" >
        agency_id = #{record.agencyId,jdbcType=BIGINT},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.uniformCreditCode != null" >
        uniform_credit_code = #{record.uniformCreditCode,jdbcType=VARCHAR},
      </if>
      <if test="record.publicBankName != null" >
        public_bank_name = #{record.publicBankName,jdbcType=VARCHAR},
      </if>
      <if test="record.publicBanAccountNumber != null" >
        public_ban_account_number = #{record.publicBanAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null" >
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAt != null" >
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
      <if test="record.companyAddress != null" >
        company_address = #{record.companyAddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_agency_detail_info
    set id = #{record.id,jdbcType=BIGINT},
      agency_id = #{record.agencyId,jdbcType=BIGINT},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      uniform_credit_code = #{record.uniformCreditCode,jdbcType=VARCHAR},
      public_bank_name = #{record.publicBankName,jdbcType=VARCHAR},
      public_ban_account_number = #{record.publicBanAccountNumber,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      company_address = #{record.companyAddress,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epc.platform.service.domain.tagency.TAgencyDetailInfo" >
    update t_agency_detail_info
    <set >
      <if test="agencyId != null" >
        agency_id = #{agencyId,jdbcType=BIGINT},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="uniformCreditCode != null" >
        uniform_credit_code = #{uniformCreditCode,jdbcType=VARCHAR},
      </if>
      <if test="publicBankName != null" >
        public_bank_name = #{publicBankName,jdbcType=VARCHAR},
      </if>
      <if test="publicBanAccountNumber != null" >
        public_ban_account_number = #{publicBanAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="companyAddress != null" >
        company_address = #{companyAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epc.platform.service.domain.tagency.TAgencyDetailInfo" >
    update t_agency_detail_info
    set agency_id = #{agencyId,jdbcType=BIGINT},
      company_name = #{companyName,jdbcType=VARCHAR},
      uniform_credit_code = #{uniformCreditCode,jdbcType=VARCHAR},
      public_bank_name = #{publicBankName,jdbcType=VARCHAR},
      public_ban_account_number = #{publicBanAccountNumber,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      company_address = #{companyAddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.epc.platform.service.domain.tagency.TAgencyDetailInfoCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_agency_detail_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select resultMap="BaseResultMap" parameterType="com.epc.platform.service.domain.supplier.TSupplierDetailInfoCriteria" id="selectByName" >
    SELECT ts.company_name ,ts.public_bank_name ,ts.create_at,ts.public_ban_account_number,ts.uniform_credit_code
FROM t_agency_detail_info ts WHERE ts.is_deleted=0 AND ts.company_name like #{companyName,jdbcType=VARCHAR}
  </select>


  <select resultMap="selectMap" parameterType="com.epc.administration.facade.biddingagency.vo.BiddingAgencyVO" id="selectByPage" >
    SELECT tb.id id, tb.cellphone,tb.`name`,tb.state, td.company_name,tb.create_at,td.is_deleted,td.public_bank_name,td.public_ban_account_number,td.agency_id,td.uniform_credit_code
    FROM t_agency_basic_info tb
    LEFT  JOIN t_agency_detail_info td ON td.agency_id=tb.id
    WHERE tb.is_deleted=0
    <if test="status != null">
      and tb.state = #{status,jdbcType=INTEGER}
    </if>
    <if test="where != null">
      and  td.company_name LIKE #{where,jdbcType=VARCHAR}
    </if>
    ORDER BY id DESC
  </select>
</mapper>