<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.epc.tendering.service.mapper.purchase.TPurchaseProjectBasicInfoMapper">
  <resultMap id="BaseResultMap" type="com.epc.tendering.service.domain.purchase.TPurchaseProjectBasicInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="purchase_project_name" jdbcType="VARCHAR" property="purchaseProjectName" />
    <result column="purchase_project_code" jdbcType="VARCHAR" property="purchaseProjectCode" />
    <result column="purchase_start_time" jdbcType="TIMESTAMP" property="purchaseStartTime" />
    <result column="purchase_end_time" jdbcType="TIMESTAMP" property="purchaseEndTime" />
    <result column="is_state_designation" jdbcType="INTEGER" property="isStateDesignation" />
    <result column="purchase_project_budgetary_amount" jdbcType="DECIMAL" property="purchaseProjectBudgetaryAmount" />
    <result column="purchase_mode" jdbcType="VARCHAR" property="purchaseMode" />
    <result column="purchase_category" jdbcType="VARCHAR" property="purchaseCategory" />
    <result column="purchase_type" jdbcType="VARCHAR" property="purchaseType" />
    <result column="purchase_range" jdbcType="INTEGER" property="purchaseRange" />
    <result column="purchase_project_status" jdbcType="VARCHAR" property="purchaseProjectStatus" />
    <result column="is_adjust" jdbcType="INTEGER" property="isAdjust" />
    <result column="is_other_agency" jdbcType="INTEGER" property="isOtherAgency" />
    <result column="operate_id" jdbcType="BIGINT" property="operateId" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, project_name, purchase_project_name, purchase_project_code, purchase_start_time, 
    purchase_end_time, is_state_designation, purchase_project_budgetary_amount, purchase_mode, 
    purchase_category, purchase_type, purchase_range, purchase_project_status, is_adjust, 
    is_other_agency, operate_id, creator, create_at, update_at, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.epc.tendering.service.domain.purchase.TPurchaseProjectBasicInfoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_purchase_project_basic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_purchase_project_basic_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_purchase_project_basic_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.epc.tendering.service.domain.purchase.TPurchaseProjectBasicInfoCriteria">
    delete from t_purchase_project_basic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epc.tendering.service.domain.purchase.TPurchaseProjectBasicInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_purchase_project_basic_info (project_id, project_name, purchase_project_name, 
      purchase_project_code, purchase_start_time, 
      purchase_end_time, is_state_designation, 
      purchase_project_budgetary_amount, purchase_mode, 
      purchase_category, purchase_type, purchase_range, 
      purchase_project_status, is_adjust, is_other_agency, 
      operate_id, creator, create_at, 
      update_at, is_deleted)
    values (#{projectId,jdbcType=BIGINT}, #{projectName,jdbcType=VARCHAR}, #{purchaseProjectName,jdbcType=VARCHAR}, 
      #{purchaseProjectCode,jdbcType=VARCHAR}, #{purchaseStartTime,jdbcType=TIMESTAMP}, 
      #{purchaseEndTime,jdbcType=TIMESTAMP}, #{isStateDesignation,jdbcType=INTEGER}, 
      #{purchaseProjectBudgetaryAmount,jdbcType=DECIMAL}, #{purchaseMode,jdbcType=VARCHAR}, 
      #{purchaseCategory,jdbcType=VARCHAR}, #{purchaseType,jdbcType=VARCHAR}, #{purchaseRange,jdbcType=INTEGER}, 
      #{purchaseProjectStatus,jdbcType=VARCHAR}, #{isAdjust,jdbcType=INTEGER}, #{isOtherAgency,jdbcType=INTEGER}, 
      #{operateId,jdbcType=BIGINT}, #{creator,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateAt,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epc.tendering.service.domain.purchase.TPurchaseProjectBasicInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_purchase_project_basic_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="purchaseProjectName != null">
        purchase_project_name,
      </if>
      <if test="purchaseProjectCode != null">
        purchase_project_code,
      </if>
      <if test="purchaseStartTime != null">
        purchase_start_time,
      </if>
      <if test="purchaseEndTime != null">
        purchase_end_time,
      </if>
      <if test="isStateDesignation != null">
        is_state_designation,
      </if>
      <if test="purchaseProjectBudgetaryAmount != null">
        purchase_project_budgetary_amount,
      </if>
      <if test="purchaseMode != null">
        purchase_mode,
      </if>
      <if test="purchaseCategory != null">
        purchase_category,
      </if>
      <if test="purchaseType != null">
        purchase_type,
      </if>
      <if test="purchaseRange != null">
        purchase_range,
      </if>
      <if test="purchaseProjectStatus != null">
        purchase_project_status,
      </if>
      <if test="isAdjust != null">
        is_adjust,
      </if>
      <if test="isOtherAgency != null">
        is_other_agency,
      </if>
      <if test="operateId != null">
        operate_id,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="purchaseProjectName != null">
        #{purchaseProjectName,jdbcType=VARCHAR},
      </if>
      <if test="purchaseProjectCode != null">
        #{purchaseProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="purchaseStartTime != null">
        #{purchaseStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="purchaseEndTime != null">
        #{purchaseEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isStateDesignation != null">
        #{isStateDesignation,jdbcType=INTEGER},
      </if>
      <if test="purchaseProjectBudgetaryAmount != null">
        #{purchaseProjectBudgetaryAmount,jdbcType=DECIMAL},
      </if>
      <if test="purchaseMode != null">
        #{purchaseMode,jdbcType=VARCHAR},
      </if>
      <if test="purchaseCategory != null">
        #{purchaseCategory,jdbcType=VARCHAR},
      </if>
      <if test="purchaseType != null">
        #{purchaseType,jdbcType=VARCHAR},
      </if>
      <if test="purchaseRange != null">
        #{purchaseRange,jdbcType=INTEGER},
      </if>
      <if test="purchaseProjectStatus != null">
        #{purchaseProjectStatus,jdbcType=VARCHAR},
      </if>
      <if test="isAdjust != null">
        #{isAdjust,jdbcType=INTEGER},
      </if>
      <if test="isOtherAgency != null">
        #{isOtherAgency,jdbcType=INTEGER},
      </if>
      <if test="operateId != null">
        #{operateId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epc.tendering.service.domain.purchase.TPurchaseProjectBasicInfoCriteria" resultType="java.lang.Integer">
    select count(*) from t_purchase_project_basic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_purchase_project_basic_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.projectName != null">
        project_name = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseProjectName != null">
        purchase_project_name = #{record.purchaseProjectName,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseProjectCode != null">
        purchase_project_code = #{record.purchaseProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseStartTime != null">
        purchase_start_time = #{record.purchaseStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.purchaseEndTime != null">
        purchase_end_time = #{record.purchaseEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isStateDesignation != null">
        is_state_designation = #{record.isStateDesignation,jdbcType=INTEGER},
      </if>
      <if test="record.purchaseProjectBudgetaryAmount != null">
        purchase_project_budgetary_amount = #{record.purchaseProjectBudgetaryAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.purchaseMode != null">
        purchase_mode = #{record.purchaseMode,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseCategory != null">
        purchase_category = #{record.purchaseCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseType != null">
        purchase_type = #{record.purchaseType,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseRange != null">
        purchase_range = #{record.purchaseRange,jdbcType=INTEGER},
      </if>
      <if test="record.purchaseProjectStatus != null">
        purchase_project_status = #{record.purchaseProjectStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.isAdjust != null">
        is_adjust = #{record.isAdjust,jdbcType=INTEGER},
      </if>
      <if test="record.isOtherAgency != null">
        is_other_agency = #{record.isOtherAgency,jdbcType=INTEGER},
      </if>
      <if test="record.operateId != null">
        operate_id = #{record.operateId,jdbcType=BIGINT},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_purchase_project_basic_info
    set id = #{record.id,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      purchase_project_name = #{record.purchaseProjectName,jdbcType=VARCHAR},
      purchase_project_code = #{record.purchaseProjectCode,jdbcType=VARCHAR},
      purchase_start_time = #{record.purchaseStartTime,jdbcType=TIMESTAMP},
      purchase_end_time = #{record.purchaseEndTime,jdbcType=TIMESTAMP},
      is_state_designation = #{record.isStateDesignation,jdbcType=INTEGER},
      purchase_project_budgetary_amount = #{record.purchaseProjectBudgetaryAmount,jdbcType=DECIMAL},
      purchase_mode = #{record.purchaseMode,jdbcType=VARCHAR},
      purchase_category = #{record.purchaseCategory,jdbcType=VARCHAR},
      purchase_type = #{record.purchaseType,jdbcType=VARCHAR},
      purchase_range = #{record.purchaseRange,jdbcType=INTEGER},
      purchase_project_status = #{record.purchaseProjectStatus,jdbcType=VARCHAR},
      is_adjust = #{record.isAdjust,jdbcType=INTEGER},
      is_other_agency = #{record.isOtherAgency,jdbcType=INTEGER},
      operate_id = #{record.operateId,jdbcType=BIGINT},
      creator = #{record.creator,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epc.tendering.service.domain.purchase.TPurchaseProjectBasicInfo">
    update t_purchase_project_basic_info
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="purchaseProjectName != null">
        purchase_project_name = #{purchaseProjectName,jdbcType=VARCHAR},
      </if>
      <if test="purchaseProjectCode != null">
        purchase_project_code = #{purchaseProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="purchaseStartTime != null">
        purchase_start_time = #{purchaseStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="purchaseEndTime != null">
        purchase_end_time = #{purchaseEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isStateDesignation != null">
        is_state_designation = #{isStateDesignation,jdbcType=INTEGER},
      </if>
      <if test="purchaseProjectBudgetaryAmount != null">
        purchase_project_budgetary_amount = #{purchaseProjectBudgetaryAmount,jdbcType=DECIMAL},
      </if>
      <if test="purchaseMode != null">
        purchase_mode = #{purchaseMode,jdbcType=VARCHAR},
      </if>
      <if test="purchaseCategory != null">
        purchase_category = #{purchaseCategory,jdbcType=VARCHAR},
      </if>
      <if test="purchaseType != null">
        purchase_type = #{purchaseType,jdbcType=VARCHAR},
      </if>
      <if test="purchaseRange != null">
        purchase_range = #{purchaseRange,jdbcType=INTEGER},
      </if>
      <if test="purchaseProjectStatus != null">
        purchase_project_status = #{purchaseProjectStatus,jdbcType=VARCHAR},
      </if>
      <if test="isAdjust != null">
        is_adjust = #{isAdjust,jdbcType=INTEGER},
      </if>
      <if test="isOtherAgency != null">
        is_other_agency = #{isOtherAgency,jdbcType=INTEGER},
      </if>
      <if test="operateId != null">
        operate_id = #{operateId,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epc.tendering.service.domain.purchase.TPurchaseProjectBasicInfo">
    update t_purchase_project_basic_info
    set project_id = #{projectId,jdbcType=BIGINT},
      project_name = #{projectName,jdbcType=VARCHAR},
      purchase_project_name = #{purchaseProjectName,jdbcType=VARCHAR},
      purchase_project_code = #{purchaseProjectCode,jdbcType=VARCHAR},
      purchase_start_time = #{purchaseStartTime,jdbcType=TIMESTAMP},
      purchase_end_time = #{purchaseEndTime,jdbcType=TIMESTAMP},
      is_state_designation = #{isStateDesignation,jdbcType=INTEGER},
      purchase_project_budgetary_amount = #{purchaseProjectBudgetaryAmount,jdbcType=DECIMAL},
      purchase_mode = #{purchaseMode,jdbcType=VARCHAR},
      purchase_category = #{purchaseCategory,jdbcType=VARCHAR},
      purchase_type = #{purchaseType,jdbcType=VARCHAR},
      purchase_range = #{purchaseRange,jdbcType=INTEGER},
      purchase_project_status = #{purchaseProjectStatus,jdbcType=VARCHAR},
      is_adjust = #{isAdjust,jdbcType=INTEGER},
      is_other_agency = #{isOtherAgency,jdbcType=INTEGER},
      operate_id = #{operateId,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.epc.tendering.service.domain.purchase.TPurchaseProjectBasicInfoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_purchase_project_basic_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>



</mapper>