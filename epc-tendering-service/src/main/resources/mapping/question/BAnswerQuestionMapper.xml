<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.epc.tendering.service.mapper.question.BAnswerQuestionMapper">
  <resultMap id="BaseResultMap" type="com.epc.tendering.service.domain.question.BAnswerQuestion">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="procurement_project_id" jdbcType="BIGINT" property="procurementProjectId" />
    <result column="questioner_id" jdbcType="BIGINT" property="questionerId" />
    <result column="questioner_name" jdbcType="VARCHAR" property="questionerName" />
    <result column="question_type" jdbcType="VARCHAR" property="questionType" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="answer_id" jdbcType="BIGINT" property="answerId" />
    <result column="answer_name" jdbcType="VARCHAR" property="answerName" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="operate_id" jdbcType="BIGINT" property="operateId" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.epc.tendering.service.domain.question.BAnswerQuestionWithBLOBs">
    <result column="problem" jdbcType="LONGVARCHAR" property="problem" />
    <result column="answer" jdbcType="LONGVARCHAR" property="answer" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, procurement_project_id, questioner_id, questioner_name, question_type, type_id, 
    answer_id, answer_name, status, operate_id, create_at, update_at, is_deleted
  </sql>
  <sql id="Blob_Column_List">
    problem, answer
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.epc.tendering.service.domain.question.BAnswerQuestionCriteria" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_answer_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.epc.tendering.service.domain.question.BAnswerQuestionCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_answer_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_answer_question
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from b_answer_question
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.epc.tendering.service.domain.question.BAnswerQuestionCriteria">
    delete from b_answer_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epc.tendering.service.domain.question.BAnswerQuestionWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into b_answer_question (procurement_project_id, questioner_id, 
      questioner_name, question_type, type_id, 
      answer_id, answer_name, status, 
      operate_id, create_at, update_at, 
      is_deleted, problem, answer
      )
    values (#{procurementProjectId,jdbcType=BIGINT}, #{questionerId,jdbcType=BIGINT}, 
      #{questionerName,jdbcType=VARCHAR}, #{questionType,jdbcType=VARCHAR}, #{typeId,jdbcType=BIGINT}, 
      #{answerId,jdbcType=BIGINT}, #{answerName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{operateId,jdbcType=BIGINT}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=INTEGER}, #{problem,jdbcType=LONGVARCHAR}, #{answer,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.epc.tendering.service.domain.question.BAnswerQuestionWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into b_answer_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="procurementProjectId != null">
        procurement_project_id,
      </if>
      <if test="questionerId != null">
        questioner_id,
      </if>
      <if test="questionerName != null">
        questioner_name,
      </if>
      <if test="questionType != null">
        question_type,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="answerId != null">
        answer_id,
      </if>
      <if test="answerName != null">
        answer_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="operateId != null">
        operate_id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="problem != null">
        problem,
      </if>
      <if test="answer != null">
        answer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="procurementProjectId != null">
        #{procurementProjectId,jdbcType=BIGINT},
      </if>
      <if test="questionerId != null">
        #{questionerId,jdbcType=BIGINT},
      </if>
      <if test="questionerName != null">
        #{questionerName,jdbcType=VARCHAR},
      </if>
      <if test="questionType != null">
        #{questionType,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="answerId != null">
        #{answerId,jdbcType=BIGINT},
      </if>
      <if test="answerName != null">
        #{answerName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="operateId != null">
        #{operateId,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="problem != null">
        #{problem,jdbcType=LONGVARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epc.tendering.service.domain.question.BAnswerQuestionCriteria" resultType="java.lang.Integer">
    select count(*) from b_answer_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update b_answer_question
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.procurementProjectId != null">
        procurement_project_id = #{record.procurementProjectId,jdbcType=BIGINT},
      </if>
      <if test="record.questionerId != null">
        questioner_id = #{record.questionerId,jdbcType=BIGINT},
      </if>
      <if test="record.questionerName != null">
        questioner_name = #{record.questionerName,jdbcType=VARCHAR},
      </if>
      <if test="record.questionType != null">
        question_type = #{record.questionType,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=BIGINT},
      </if>
      <if test="record.answerId != null">
        answer_id = #{record.answerId,jdbcType=BIGINT},
      </if>
      <if test="record.answerName != null">
        answer_name = #{record.answerName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.operateId != null">
        operate_id = #{record.operateId,jdbcType=BIGINT},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
      <if test="record.problem != null">
        problem = #{record.problem,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update b_answer_question
    set id = #{record.id,jdbcType=BIGINT},
      procurement_project_id = #{record.procurementProjectId,jdbcType=BIGINT},
      questioner_id = #{record.questionerId,jdbcType=BIGINT},
      questioner_name = #{record.questionerName,jdbcType=VARCHAR},
      question_type = #{record.questionType,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=BIGINT},
      answer_id = #{record.answerId,jdbcType=BIGINT},
      answer_name = #{record.answerName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      operate_id = #{record.operateId,jdbcType=BIGINT},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      problem = #{record.problem,jdbcType=LONGVARCHAR},
      answer = #{record.answer,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update b_answer_question
    set id = #{record.id,jdbcType=BIGINT},
      procurement_project_id = #{record.procurementProjectId,jdbcType=BIGINT},
      questioner_id = #{record.questionerId,jdbcType=BIGINT},
      questioner_name = #{record.questionerName,jdbcType=VARCHAR},
      question_type = #{record.questionType,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=BIGINT},
      answer_id = #{record.answerId,jdbcType=BIGINT},
      answer_name = #{record.answerName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      operate_id = #{record.operateId,jdbcType=BIGINT},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epc.tendering.service.domain.question.BAnswerQuestionWithBLOBs">
    update b_answer_question
    <set>
      <if test="procurementProjectId != null">
        procurement_project_id = #{procurementProjectId,jdbcType=BIGINT},
      </if>
      <if test="questionerId != null">
        questioner_id = #{questionerId,jdbcType=BIGINT},
      </if>
      <if test="questionerName != null">
        questioner_name = #{questionerName,jdbcType=VARCHAR},
      </if>
      <if test="questionType != null">
        question_type = #{questionType,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="answerId != null">
        answer_id = #{answerId,jdbcType=BIGINT},
      </if>
      <if test="answerName != null">
        answer_name = #{answerName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="operateId != null">
        operate_id = #{operateId,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="problem != null">
        problem = #{problem,jdbcType=LONGVARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.epc.tendering.service.domain.question.BAnswerQuestionWithBLOBs">
    update b_answer_question
    set procurement_project_id = #{procurementProjectId,jdbcType=BIGINT},
      questioner_id = #{questionerId,jdbcType=BIGINT},
      questioner_name = #{questionerName,jdbcType=VARCHAR},
      question_type = #{questionType,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=BIGINT},
      answer_id = #{answerId,jdbcType=BIGINT},
      answer_name = #{answerName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      operate_id = #{operateId,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      problem = #{problem,jdbcType=LONGVARCHAR},
      answer = #{answer,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epc.tendering.service.domain.question.BAnswerQuestion">
    update b_answer_question
    set procurement_project_id = #{procurementProjectId,jdbcType=BIGINT},
      questioner_id = #{questionerId,jdbcType=BIGINT},
      questioner_name = #{questionerName,jdbcType=VARCHAR},
      question_type = #{questionType,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=BIGINT},
      answer_id = #{answerId,jdbcType=BIGINT},
      answer_name = #{answerName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      operate_id = #{operateId,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.epc.tendering.service.domain.question.BAnswerQuestionCriteria" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_answer_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.epc.tendering.service.domain.question.BAnswerQuestionCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_answer_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

</mapper>