<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.epc.web.service.mapper.agency.TAgencyBasicInfoMapper" >
  <resultMap id="BaseResultMap" type="com.epc.web.service.domain.agency.TAgencyBasicInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="agency_id" property="agencyId" jdbcType="BIGINT" />
    <result column="cellphone" property="cellphone" jdbcType="CHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="inviter_type" property="inviterType" jdbcType="INTEGER" />
    <result column="inviter_id" property="inviterId" jdbcType="BIGINT" />
    <result column="inviter_company_id" property="inviterCompanyId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="is_forbidden" property="isForbidden" javaType="INTEGER"/>
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, agency_id, cellphone, password, inviter_type, inviter_id, inviter_company_id, 
    state, role, create_at, update_at, is_deleted
  </sql>
  <select id="login" resultType="com.epc.web.facade.loginuser.dto.LoginUser">
    SELECT agency.id AS selfId,agency.`name`,agency.cellphone,agency.agency_id AS bossId,boss.name AS bossName ,d.company_name AS
    companyName
    FROM t_agency_basic_info agency
    LEFT JOIN t_agency_basic_info boss ON agency.agency_id=boss.agency_id
    LEFT JOIN t_agency_detail_info  d ON d.agency_id = agency.agency_id
    WHERE agency.cellphone=#{cellphone}
    AND agency.password=#{pwd}
    AND agency.agency_id=boss.agency_id
    AND boss.role=0;
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.epc.web.service.domain.agency.TAgencyBasicInfoCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_agency_basic_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_agency_basic_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_agency_basic_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.epc.web.service.domain.agency.TAgencyBasicInfoCriteria" >
    delete from t_agency_basic_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.epc.web.service.domain.agency.TAgencyBasicInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_agency_basic_info (name, agency_id, cellphone, 
      password, inviter_type, inviter_id, 
      inviter_company_id, state, role, 
      create_at, update_at, is_deleted
      )
    values (#{name,jdbcType=VARCHAR}, #{agencyId,jdbcType=BIGINT}, #{cellphone,jdbcType=CHAR}, 
      #{password,jdbcType=CHAR}, #{inviterType,jdbcType=INTEGER}, #{inviterId,jdbcType=BIGINT}, 
      #{inviterCompanyId,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{role,jdbcType=INTEGER}, 
      #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.epc.web.service.domain.agency.TAgencyBasicInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_agency_basic_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="agencyId != null" >
        agency_id,
      </if>
      <if test="cellphone != null" >
        cellphone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="inviterType != null" >
        inviter_type,
      </if>
      <if test="inviterId != null" >
        inviter_id,
      </if>
      <if test="inviterCompanyId != null" >
        inviter_company_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="agencyId != null" >
        #{agencyId,jdbcType=BIGINT},
      </if>
      <if test="cellphone != null" >
        #{cellphone,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="inviterType != null" >
        #{inviterType,jdbcType=INTEGER},
      </if>
      <if test="inviterId != null" >
        #{inviterId,jdbcType=BIGINT},
      </if>
      <if test="inviterCompanyId != null" >
        #{inviterCompanyId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="registerUser">
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT  INTO t_agency_basic_info
    (cellphone,password,,`name`)
    VALUES
    (#{cellphone},#{pwd},#{name})

  </insert>
  <select id="countByExample" parameterType="com.epc.web.service.domain.agency.TAgencyBasicInfoCriteria" resultType="java.lang.Integer" >
    select count(*) from t_agency_basic_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_agency_basic_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.agencyId != null" >
        agency_id = #{record.agencyId,jdbcType=BIGINT},
      </if>
      <if test="record.cellphone != null" >
        cellphone = #{record.cellphone,jdbcType=CHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.inviterType != null" >
        inviter_type = #{record.inviterType,jdbcType=INTEGER},
      </if>
      <if test="record.inviterId != null" >
        inviter_id = #{record.inviterId,jdbcType=BIGINT},
      </if>
      <if test="record.inviterCompanyId != null" >
        inviter_company_id = #{record.inviterCompanyId,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.role != null" >
        role = #{record.role,jdbcType=INTEGER},
      </if>
      <if test="record.createAt != null" >
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAt != null" >
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_agency_basic_info
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      agency_id = #{record.agencyId,jdbcType=BIGINT},
      cellphone = #{record.cellphone,jdbcType=CHAR},
      password = #{record.password,jdbcType=CHAR},
      inviter_type = #{record.inviterType,jdbcType=INTEGER},
      inviter_id = #{record.inviterId,jdbcType=BIGINT},
      inviter_company_id = #{record.inviterCompanyId,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      role = #{record.role,jdbcType=INTEGER},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epc.web.service.domain.agency.TAgencyBasicInfo" >
    update t_agency_basic_info
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="agencyId != null" >
        agency_id = #{agencyId,jdbcType=BIGINT},
      </if>
      <if test="cellphone != null" >
        cellphone = #{cellphone,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="inviterType != null" >
        inviter_type = #{inviterType,jdbcType=INTEGER},
      </if>
      <if test="inviterId != null" >
        inviter_id = #{inviterId,jdbcType=BIGINT},
      </if>
      <if test="inviterCompanyId != null" >
        inviter_company_id = #{inviterCompanyId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epc.web.service.domain.agency.TAgencyBasicInfo" >
    update t_agency_basic_info
    set name = #{name,jdbcType=VARCHAR},
      agency_id = #{agencyId,jdbcType=BIGINT},
      cellphone = #{cellphone,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      inviter_type = #{inviterType,jdbcType=INTEGER},
      inviter_id = #{inviterId,jdbcType=BIGINT},
      inviter_company_id = #{inviterCompanyId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      role = #{role,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateAgencyForbbiden">
      UPDATE t_agency_basic_info
      <set>
        <if test="forbidden!=null">
          is_forbidden=#{forbidden}
        </if>
      </set>
    WHERE id=#{id}
    </update>
  <update id="updateAgencyEmployeeRoleById">
    UPDATE t_agency_basic_info
    <set>
      <if test="role!=null">
        role=#{role}
      </if>
    </set>
    WHERE id=#{id}
  </update>
  <update id="deleteAgencyExpertById">
    UPDATE t_agency_expert
    SET is_delete=#{delete}
    WHERE id =#{id}
  </update>
  <update id="updateAgencyEmployeeDetail" parameterType="com.epc.web.service.domain.agency.TAgencyBasicInfo">
    UPDATE t_agency_basic_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        cellphone = #{cellphone,jdbcType=CHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    WHERE id=#{id}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.epc.web.service.domain.agency.TAgencyBasicInfoCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_agency_basic_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectEmployee" resultType="com.epc.web.service.domain.agency.TAgencyBasicInfo" parameterType="com.epc.web.facade.agency.dto.AgencyEmployeeDto">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
    t_agency_basic_info
    <where>
      agency_id = #{agencyId,jdbcType=BIGINT}
      <if test="name != null" >
       AND `name` = #{name,jdbcType=VARCHAR}
      </if>
      <if test="cellphone != null" >
        AND cellphone = #{cellphone,jdbcType=CHAR}
      </if>
      <if test="role != null" >
        AND role = #{role,jdbcType=INTEGER}
      </if>
      <if test="createAt != null" >
        AND create_at = #{createAt,jdbcType=TIMESTAMP}
      </if>
      <if test="isDeleted != null" >
        AND is_deleted = #{isDeleted,jdbcType=INTEGER}
      </if>
      <if test="isForbbiden !=null">
        AND is_forbbiden = #{isForbbiden,jdbcType=INTEGER}
      </if>
      <if test="employeeId!=null">
        AND id = #{employeeId}
      </if>
    </where>
  </select>
  <select id="selectAgencyBasicByCellphoneAndName"
          resultType="com.epc.web.service.domain.agency.TAgencyBasicInfo">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
    <where>
      <if test="name!=null">
        AND `name` = #{name}
      </if>
      <if test="cellphone!=null">
        AND cellphone = #{cellphone}
      </if>
    </where>

  </select>
  <select id="selectBossBasicInfoByPurchaserIdAndRole"
          resultType="com.epc.web.service.domain.agency.TAgencyBasicInfo">
    SELECT <include refid="Base_Column_List"/>
    FROM t_agency_basic_info
    WHERE agency_id =#{agencyId}
    AND role = #{roleCorporation}
  </select>
</mapper>