<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.epc.web.service.mapper.operator.TOperatorBasicInfoMapper" >
  <resultMap id="BaseResultMap" type="com.epc.web.service.domain.operator.TOperatorBasicInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="cellphone" property="cellphone" jdbcType="CHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="operator_id" property="operatorId" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="is_forbidden" property="isForbidden" jdbcType="INTEGER" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cellphone, password, name, operator_id, state, role, is_forbidden, create_at, 
    update_at, is_deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.epc.web.service.domain.operator.TOperatorBasicInfoCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_operator_basic_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_operator_basic_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_operator_basic_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.epc.web.service.domain.operator.TOperatorBasicInfoCriteria" >
    delete from t_operator_basic_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.epc.web.service.domain.operator.TOperatorBasicInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_operator_basic_info (cellphone, password, name, 
      operator_id, state, role, 
      is_forbidden, create_at, update_at, 
      is_deleted)
    values (#{cellphone,jdbcType=CHAR}, #{password,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, 
      #{operatorId,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}, #{role,jdbcType=INTEGER}, 
      #{isForbidden,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.epc.web.service.domain.operator.TOperatorBasicInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_operator_basic_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cellphone != null" >
        cellphone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="isForbidden != null" >
        is_forbidden,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cellphone != null" >
        #{cellphone,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="isForbidden != null" >
        #{isForbidden,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.epc.web.service.domain.operator.TOperatorBasicInfoCriteria" resultType="java.lang.Integer" >
    select count(*) from t_operator_basic_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_operator_basic_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.cellphone != null" >
        cellphone = #{record.cellphone,jdbcType=CHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorId != null" >
        operator_id = #{record.operatorId,jdbcType=BIGINT},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.role != null" >
        role = #{record.role,jdbcType=INTEGER},
      </if>
      <if test="record.isForbidden != null" >
        is_forbidden = #{record.isForbidden,jdbcType=INTEGER},
      </if>
      <if test="record.createAt != null" >
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAt != null" >
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_operator_basic_info
    set id = #{record.id,jdbcType=BIGINT},
      cellphone = #{record.cellphone,jdbcType=CHAR},
      password = #{record.password,jdbcType=CHAR},
      name = #{record.name,jdbcType=VARCHAR},
      operator_id = #{record.operatorId,jdbcType=BIGINT},
      state = #{record.state,jdbcType=INTEGER},
      role = #{record.role,jdbcType=INTEGER},
      is_forbidden = #{record.isForbidden,jdbcType=INTEGER},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.epc.web.service.domain.operator.TOperatorBasicInfo" >
    update t_operator_basic_info
    <set >
      <if test="cellphone != null" >
        cellphone = #{cellphone,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="isForbidden != null" >
        is_forbidden = #{isForbidden,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.epc.web.service.domain.operator.TOperatorBasicInfo" >
    update t_operator_basic_info
    set cellphone = #{cellphone,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      name = #{name,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER},
      role = #{role,jdbcType=INTEGER},
      is_forbidden = #{isForbidden,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.epc.web.service.domain.operator.TOperatorBasicInfoCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_operator_basic_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>


  <!--wenlin-->
  <select id="selectOperatorDetailByOperatorId"
          resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_operator_basic_info
    WHERE operator_id =#{operatorId}
    AND role =#{roleCorporation}
  </select>

  <select id="login" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_operator_basic_info
    WHERE cellphone=#{cellphone}
    AND password=#{pwd}
  </select>

  <insert id="registerUser">
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO t_operator_basic_info
    (cellphone,password,`name`,create_at,update_at,state,role)
    VALUES
    (#{cellphone},#{pwd},#{name},#{dates},#{dates},2,0)
  </insert>

  <select id="selectByNameAndCellphone" resultType="com.epc.web.service.domain.operator.TOperatorBasicInfo">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_operator_basic_info
    WHERE `name`=#{name}
    AND cellphone=#{cellphone}
  </select>

  <select id="selectByCellphone" resultType="com.epc.web.service.domain.operator.TOperatorBasicInfo">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_operator_basic_info
    WHERE cellphone =#{cell}
  </select>

  <update id="updateOperatorPassword" parameterType="com.epc.web.facade.loginuser.dto.ModifyUser">
    UPDATE t_operator_basic_info
    SET password =#{newPassword}
    WHERE cellphone=#{cellphone}
  </update>



</mapper>